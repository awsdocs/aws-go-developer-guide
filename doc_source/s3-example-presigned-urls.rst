.. Copyright 2010-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.

   This work is licensed under a Creative Commons Attribution-NonCommercial-ShareAlike 4.0
   International License (the "License"). You may not use this file except in compliance with the
   License. A copy of the License is located at http://creativecommons.org/licenses/by-nc-sa/4.0/.

   This file is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,
   either express or implied. See the License for the specific language governing permissions and
   limitations under the License.

.. _examples-s3-presigned-urls:

#################################################
Creating Pre-Signed URLs for |S3| Buckets with Go
#################################################

.. meta::
   :description: Use S3 code examples to create pre-signed URLS to S3 buckets in your Go applications.
   :keywords: examples, S3, create, presigned, URLs


This Go example shows you how to obtain a pre-signed URL for an |S3| bucket. You can download complete
versions of these example files from the :doc-examples-go:`aws-doc-sdk-examples <s3>` repository on GitHub.

.. _s3-pre-signed-scenario:

The Scenario
============

In this example, a series of Go routines are used to obtain a pre-signed URL for
an |S3| bucket using either :code:`GetObject` or a PUT operation. A pre-signed URL allows you
to grant temporary access to users who don't have permission to directly run AWS operations
in your account. A pre-signed URL is signed with your credentials and can be used by any
user.

* :sdk-go-api-deep:`Presign <aws/request/#Request.Presign>`

.. _S3-pre-signed-prerequisites:

Prerequisites
=============

* You have :doc:`set up <setting-up>` and :doc:`configured <configuring-sdk>` the SDK.
* You are familiar with pre-signed URLs. To learn more, see :S3-dg:`Uploading Objects Using
  Pre-Signed URLs <PresignedUrlUploadObject>` in the |S3-dg|.

.. _generate-a-pre-signed-url:

Generate a Pre-Signed URL for a GetObject Operation
===================================================

To generate a pre-signed URL, use the :sdk-go-api-deep:`Presign <aws/request/#Request.Presign>`
method on the ``request`` object. You must set an expiration value because the |sdk-go| doesn't
set one by default.

The following example generates a pre-signed URL that enables you to temporarily share a file
without making it public. Anyone with access to the URL can view the file.


.. literalinclude:: example_code/s3/generate_presigned_url.go
   :dedent: 4
   :lines: 15-

If the SDK has not retrieved your credentials before calling ``Presign``, it will get them to
generate the pre-signed URL.

.. _generate-a-pre-signed-url-put:

Generate a Pre-Signed URL for an |S3| PUT Operation with a Specific Payload
===========================================================================

You can generate a pre-signed URL for a PUT operation that checks whether users upload the correct
content. When the SDK pre-signs a request, it computes the checksum of the request body and
generates an MD5 checksum that is included in the pre-signed URL. Users must upload the same
content that produces the same MD5 checksum generated by the SDK; otherwise, the operation fails.
This is not the Content-MD5, but the signature. To enforce Content-MD5, simply add the header to the request.

The following example adds a ``Body`` field to generate a pre-signed PUT operation that requires
a specific payload to be uploaded by users.

.. literalinclude:: example_code/s3/generate_presigned_url_specific_payload.go
   :dedent: 4
   :lines: 15-


If you omit the ``Body`` field, users can write any contents to the given
object.

This example shows the enforcing of Content-MD5.

.. literalinclude:: example_code/s3/enforce_content_md5.go
   :dedent: 4
   :lines: 15-
